plugins {
    id 'java'
    id 'war'
}

group 'org.scoula'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    springVersion = '5.3.37'
    lombokVersion = '1.18.30'
    springSecurityVersion = '5.8.13'
}

sourceCompatibility = '1.17'
targetCompatibility = '1.17'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


dependencies {
    // 스프링  -  Spring Framework  -  스프링컨텍스트 및 웹MVC 구성요소
    implementation("org.springframework:spring-context:${springVersion}")
            { exclude group: 'commons-logging', module: 'commons-logging' }
    implementation "org.springframework:spring-webmvc:${springVersion}"
    implementation 'javax.inject:javax.inject:1'


    // 보안  -  Spring Security  -  웹/설정/코어/태그 라이브러리 구성요소 보안관련
    implementation("org.springframework.security:spring-security-web:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-config:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-core:${springSecurityVersion}")
    implementation("org.springframework.security:spring-security-taglibs:${springSecurityVersion}")


    //JWT  -  Jason Web Tojen  -  토큰기반 인증을 위한 JWT처리
    implementation("io.jsonwebtoken:jjwt-api:0.11.5")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.5")
    implementation("io.jsonwebtoken:jjwt-jackson:0.11.5")


    // AOP  -  Aspect-Oriented Programming  -  관점 지향 프로그래밍 구현위한 AspectJ
    implementation 'org.aspectj:aspectjrt:1.9.20'
    implementation 'org.aspectj:aspectjweaver:1.9.20'


    // JSP, SERVLET, JSTL  -  서블릿, JSP, API, JSTL  -  전통적인 자바 웹개발용 필수구성요소
    implementation('javax.servlet:javax.servlet-api:4.0.1')
    compileOnly 'javax.servlet.jsp:jsp-api:2.1'
    implementation 'javax.servlet:jstl:1.2'


    // Logging
//    implementation 'org.slf4j:slf4j-api:2.0.9'
//    runtimeOnly 'org.slf4j:jcl-over-slf4j:2.0.9'
//    runtimeOnly 'org.slf4j:slf4j-log4j12:2.0.9'
//    implementation 'log4j:log4j:1.2.17'

    // Log4j2  -  로그출력용
    implementation 'org.apache.logging.log4j:log4j-api:2.18.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.18.0'
//    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.18.0'
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4:1.16'
    implementation 'org.apache.logging.log4j:log4j-api:2.0.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.0.1'


    // xml내 한글 처리  -  XML 처리 중 인코딩 문제 해결
    implementation 'xerces:xercesImpl:2.12.2'

    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Jackson - Json 처리 -  객체<->JSON간 매핑해주기 위함.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.4'

    // 데이터베이스
    implementation 'com.mysql:mysql-connector-j:8.1.0'
    implementation 'com.zaxxer:HikariCP:2.7.4'

    implementation "org.springframework:spring-tx:${springVersion}"
    implementation "org.springframework:spring-jdbc:${springVersion}"

    implementation 'org.mybatis:mybatis:3.4.6'
    implementation 'org.mybatis:mybatis-spring:1.3.2'


    // Swagger  -  REST API 문서 자동 생성
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'


//>----------------------------------------------------------------------------------------<//


    // 테스트  -  단위 테스트와 통합 테스트 지원
    testImplementation "org.springframework:spring-test:${springVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
}


test {
    useJUnitPlatform()
}